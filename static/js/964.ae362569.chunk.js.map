{"version":3,"file":"static/js/964.ae362569.chunk.js","mappings":"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","sources":["components/portfolio-builder/Preview.jsx","components/portfolio-builder/Instructions.jsx","components/portfolio-builder/forms/AboutForm.jsx","components/portfolio-builder/forms/ContactForm.jsx","components/portfolio-builder/forms/ExperienceForm.jsx","components/portfolio-builder/forms/HeaderFooterForm.jsx","components/portfolio-builder/forms/IntroForm.jsx","components/portfolio-builder/forms/ProjectForm.jsx","components/portfolio-builder/forms/SocialmediaLinksEmailForm.jsx","components/portfolio-builder/emptyData.js","components/portfolio-builder/PortfolioBuilder.jsx","components/portfolio-builder/PortfolioBuilderWrapper.jsx"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport Footer from \"../footer/Footer\";\r\nimport LeftPanel from \"../left-panel/LeftPanel\";\r\nimport AllSections from \"../all-sections/AllSections\";\r\n\r\nclass Preview extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      width: window.innerWidth,\r\n    };\r\n    this.handleResize = this.handleResize.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"resize\", this.handleResize);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"resize\", this.handleResize);\r\n  }\r\n\r\n  handleResize() {\r\n    this.setState({ width: window.innerWidth });\r\n  }\r\n\r\n  render() {\r\n    const { socialMediaLinks, userData, footerData } = this.props;\r\n    return (\r\n      <div className=\"preview\">\r\n        <AllSections {...userData} />\r\n        {this.state.width <= 500 && <LeftPanel {...socialMediaLinks} />}\r\n        <Footer {...footerData} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Preview;\r\n","import React, { Component } from \"react\";\r\nimport { NewTabAnchor } from \"../generic\";\r\n\r\nclass Instructions extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"form-heading\">Instructions</div>\r\n        <div>\r\n          <h3>\r\n            Welcome to BuildYourPortfolio! If you would like to use my portfolio\r\n            as a template, follow the steps below.\r\n          </h3>\r\n        </div>\r\n        <div>\r\n          <p>\r\n            <strong>Step 1:</strong> Fill out all the forms in different\r\n            sections.\r\n          </p>\r\n          <p>\r\n            <strong>Step 2:</strong> Don't forget to save the current form\r\n            before proceeding further.\r\n          </p>\r\n          <p>\r\n            <strong>Step 3:</strong> Preview your portfolio at any time to view\r\n            how your content will look like. Please note that in the preview\r\n            modal, links and hover effects will not work as it is for display\r\n            purpose only.\r\n          </p>\r\n          <p>\r\n            <strong>Step 4:</strong> Generate JSON after you are done adding all\r\n            the sections.\r\n          </p>\r\n          <p>\r\n            <strong>Step 5:</strong>{\" \"}\r\n            <NewTabAnchor\r\n              href={\"https://github.com/iamsahilsoni/SahilSoniWebPortfolio2023\"}\r\n              style={{ fontSize: \"inherit\", fontWeight: 700 }}>\r\n              {\" \"}\r\n              Fork my Git Repository{\" \"}\r\n            </NewTabAnchor>\r\n            and replace the JSON in public folder with the downloaded one. Keep\r\n            JSON file name as data.json.\r\n          </p>\r\n          <p>\r\n            <strong>Step 6:</strong> Organize your images(4x3 recommended) in\r\n            the 'public/assets' folder. Make sure to add the images with same\r\n            name as filled in the form.\r\n          </p>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Instructions;\r\n","import React, { Component } from \"react\";\r\n\r\nclass AboutForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: props.userData.aboutInfo,\r\n    };\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    this.setState((prevState) => ({\r\n      data: {\r\n        ...prevState.data,\r\n        [name]: value,\r\n      },\r\n    }));\r\n  };\r\n\r\n  handleSkillsListChange = (index, event) => {\r\n    const { value } = event.target;\r\n    this.setState((prevState) => {\r\n      const skillsList = [...prevState.data.skillsList];\r\n      skillsList[index] = value;\r\n      return {\r\n        data: {\r\n          ...prevState.data,\r\n          skillsList,\r\n        },\r\n      };\r\n    });\r\n  };\r\n\r\n  handleAddSkill = () => {\r\n    this.setState((prevState) => {\r\n      const skillsList = [...prevState.data.skillsList, \"\"];\r\n      return {\r\n        data: {\r\n          ...prevState.data,\r\n          skillsList,\r\n        },\r\n      };\r\n    });\r\n  };\r\n\r\n  handleRemoveSkill = (index) => {\r\n    this.setState((prevState) => {\r\n      const skillsList = [...prevState.data.skillsList];\r\n      skillsList.splice(index, 1);\r\n      return {\r\n        data: {\r\n          ...prevState.data,\r\n          skillsList,\r\n        },\r\n      };\r\n    });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.props.updateUserData(this.state.data, \"aboutInfo\");\r\n  };\r\n\r\n  render() {\r\n    const { firstPara, secondPara, displayPic, skillsList } = this.state.data;\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <div className=\"form-heading\">About</div>\r\n        <div className=\"input-field-section\">\r\n          <label>\r\n            First Paragraph:\r\n            <textarea\r\n              name=\"firstPara\"\r\n              value={firstPara}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n          <label>\r\n            Second Paragraph:\r\n            <textarea\r\n              name=\"secondPara\"\r\n              value={secondPara}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n          <label>\r\n            Display Picture:\r\n            <input\r\n              type=\"text\"\r\n              name=\"displayPic\"\r\n              value={displayPic}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n          <label>\r\n            Skills List:\r\n            {skillsList.map((skill, index) => (\r\n              <div key={index}>\r\n                <input\r\n                  type=\"text\"\r\n                  value={skill}\r\n                  onChange={(event) =>\r\n                    this.handleSkillsListChange(index, event)\r\n                  }\r\n                />\r\n                {index !== 0 && (\r\n                  <button\r\n                    type=\"button\"\r\n                    style={{ margin: \"10px\" }}\r\n                    onClick={() => this.handleRemoveSkill(index)}>\r\n                    Remove Skill\r\n                  </button>\r\n                )}\r\n              </div>\r\n            ))}\r\n            <div className=\"add-sub-section\">\r\n              <button type=\"button\" onClick={this.handleAddSkill}>\r\n                Add Another Skill\r\n              </button>\r\n            </div>\r\n          </label>\r\n        </div>\r\n        <div className=\"form-save-button\">\r\n          <button type=\"submit\">Save</button>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AboutForm;\r\n","import React, { Component } from \"react\";\r\n\r\nclass ContactForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: props.userData.contactInfo,\r\n    };\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    this.setState((prevState) => ({\r\n      data: {\r\n        ...prevState.data,\r\n        [name]: value,\r\n      },\r\n    }));\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.props.updateUserData(this.state.data, \"contactInfo\");\r\n  };\r\n\r\n  render() {\r\n    const { content, email } = this.state.data;\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <div className=\"form-heading\">Contact</div>\r\n        <div className=\"input-field-section\">\r\n          <label>\r\n            Content:\r\n            <textarea\r\n              name=\"content\"\r\n              value={content}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n          <label>\r\n            Email:\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              value={email}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n        </div>\r\n        <div className=\"form-save-button\">\r\n          <button type=\"submit\">Save</button>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import React, { Component } from \"react\";\r\n\r\nclass ExperienceForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: props.userData.experiences,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { data } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"form-heading\">Experience</div>\r\n        {data.map((exp, index) => (\r\n          <div className=\"input-field-section\" key={index}>\r\n            <label>\r\n              Company:\r\n              <input\r\n                type=\"text\"\r\n                name={`company`}\r\n                value={exp.company}\r\n                onChange={(event) => {\r\n                  const { name, value } = event.target;\r\n                  this.setState((prevState) => ({\r\n                    data: prevState.data.map((exp, i) =>\r\n                      i === index ? { ...exp, [name]: value } : exp\r\n                    ),\r\n                  }));\r\n                }}\r\n              />\r\n            </label>\r\n            <label>\r\n              Position:\r\n              <input\r\n                type=\"text\"\r\n                name={`position`}\r\n                value={exp.position}\r\n                onChange={(event) => {\r\n                  const { name, value } = event.target;\r\n                  this.setState((prevState) => ({\r\n                    data: prevState.data.map((exp, i) =>\r\n                      i === index ? { ...exp, [name]: value } : exp\r\n                    ),\r\n                  }));\r\n                }}\r\n              />\r\n            </label>\r\n            <label>\r\n              Duration:\r\n              <input\r\n                type=\"text\"\r\n                name={`duration`}\r\n                value={exp.duration}\r\n                onChange={(event) => {\r\n                  const { name, value } = event.target;\r\n                  this.setState((prevState) => ({\r\n                    data: prevState.data.map((exp, i) =>\r\n                      i === index ? { ...exp, [name]: value } : exp\r\n                    ),\r\n                  }));\r\n                }}\r\n              />\r\n            </label>\r\n            <label>\r\n              Description:\r\n              {exp.description.map((description, descIndex) => (\r\n                <div key={descIndex}>\r\n                  <textarea\r\n                    type=\"text\"\r\n                    name={`description[${descIndex}]`}\r\n                    value={description}\r\n                    onChange={(event) => {\r\n                      const { value } = event.target;\r\n                      this.setState((prevState) => ({\r\n                        data: prevState.data.map((exp, i) =>\r\n                          i === index\r\n                            ? {\r\n                                ...exp,\r\n                                description: exp.description.map((d, j) =>\r\n                                  j === descIndex ? value : d\r\n                                ),\r\n                              }\r\n                            : exp\r\n                        ),\r\n                      }));\r\n                    }}\r\n                  />\r\n\r\n                  {descIndex !== 0 && (\r\n                    <button\r\n                      type=\"button\"\r\n                      style={{ margin: \"10px\" }}\r\n                      onClick={() => {\r\n                        this.setState((prevState) => ({\r\n                          data: prevState.data.map((exp, i) =>\r\n                            i === index\r\n                              ? {\r\n                                  ...exp,\r\n                                  description: [\r\n                                    ...exp.description.slice(0, descIndex),\r\n                                    ...exp.description.slice(descIndex + 1),\r\n                                  ],\r\n                                }\r\n                              : exp\r\n                          ),\r\n                        }));\r\n                      }}>\r\n                      Remove Description\r\n                    </button>\r\n                  )}\r\n                  {descIndex === exp.description.length - 1 && (\r\n                    <div className=\"add-sub-section\">\r\n                      <button\r\n                        type=\"button\"\r\n                        onClick={() => {\r\n                          this.setState((prevState) => ({\r\n                            data: prevState.data.map((exp, i) =>\r\n                              i === index\r\n                                ? {\r\n                                    ...exp,\r\n                                    description: [...exp.description, \"\"],\r\n                                  }\r\n                                : exp\r\n                            ),\r\n                          }));\r\n                        }}>\r\n                        Add Another Description\r\n                      </button>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              ))}\r\n            </label>\r\n          </div>\r\n        ))}\r\n        {this.state.data.length !== 1 && (\r\n          <div className=\"add-sub-section\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => {\r\n                this.setState((prevState) => ({\r\n                  data: prevState.data.slice(0, -1),\r\n                }));\r\n              }}>\r\n              Remove Last Experience\r\n            </button>\r\n          </div>\r\n        )}\r\n        <div className=\"form-save-button\">\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => {\r\n              this.setState((prevState) => ({\r\n                data: [\r\n                  ...prevState.data,\r\n                  {\r\n                    company: \"\",\r\n                    position: \"\",\r\n                    duration: \"\",\r\n                    description: [\"\"],\r\n                  },\r\n                ],\r\n              }));\r\n            }}>\r\n            Add Another Experience\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"form-save-button\">\r\n          <button\r\n            type=\"submit\"\r\n            onClick={(event) => {\r\n              event.preventDefault();\r\n              this.props.updateUserData(this.state.data, \"experiences\");\r\n            }}>\r\n            Save\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ExperienceForm;\r\n","import React, { Component } from \"react\";\r\n\r\nclass HeaderFooterForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      headerData: props.headerData,\r\n      footerData: props.footerData,\r\n    };\r\n  }\r\n  render() {\r\n    const { headerData } = this.state;\r\n    const { footerData } = this.state;\r\n    return (\r\n      <div>\r\n        <div className=\"form-heading\">Header and Footer</div>\r\n        <div className=\"header-data input-field-section\">\r\n          <label>\r\n            Resume Source:\r\n            <input\r\n              type=\"text\"\r\n              name={`resumeSrc`}\r\n              value={headerData.resumeSrc}\r\n              onChange={(event) => {\r\n                const { name, value } = event.target;\r\n                this.setState((prevState) => ({\r\n                  ...prevState,\r\n                  headerData: {\r\n                    ...prevState.headerData,\r\n                    [name]: value,\r\n                  },\r\n                }));\r\n              }}\r\n            />\r\n          </label>\r\n          <label>\r\n            Logo Source:\r\n            <input\r\n              type=\"text\"\r\n              name={`logoSrc`}\r\n              value={headerData.logoSrc}\r\n              onChange={(event) => {\r\n                const { name, value } = event.target;\r\n                this.setState((prevState) => ({\r\n                  ...prevState,\r\n                  headerData: {\r\n                    ...prevState.headerData,\r\n                    [name]: value,\r\n                  },\r\n                }));\r\n              }}\r\n            />\r\n          </label>\r\n        </div>\r\n        <div className=\"footer-data input-field-section\">\r\n          <label>\r\n            Self Credit Content:\r\n            <input\r\n              type=\"text\"\r\n              name={`selfCreditContent`}\r\n              value={footerData.selfCreditContent}\r\n              placeholder=\"Revised By <your-name>\"\r\n              onChange={(event) => {\r\n                const { name, value } = event.target;\r\n                this.setState((prevState) => ({\r\n                  ...prevState,\r\n                  footerData: {\r\n                    ...prevState.footerData,\r\n                    [name]: value,\r\n                  },\r\n                }));\r\n              }}\r\n            />\r\n          </label>\r\n          <label>\r\n            GitHub Repository:\r\n            <input\r\n              type=\"text\"\r\n              name={`gitRepo`}\r\n              value={footerData.gitRepo}\r\n              placeholder=\"< username >/< reponame >\"\r\n              onChange={(event) => {\r\n                const { name, value } = event.target;\r\n                this.setState((prevState) => ({\r\n                  ...prevState,\r\n                  footerData: {\r\n                    ...prevState.footerData,\r\n                    [name]: value,\r\n                  },\r\n                }));\r\n              }}\r\n            />\r\n          </label>\r\n          <label>\r\n            Credit Content:\r\n            <input\r\n              type=\"text\"\r\n              name={`creditContent`}\r\n              value={footerData.creditContent}\r\n              placeholder=\"Designed and Built By Sahil Soni\"\r\n              onChange={(event) => {\r\n                const { name, value } = event.target;\r\n                this.setState((prevState) => ({\r\n                  ...prevState,\r\n                  footerData: {\r\n                    ...prevState.footerData,\r\n                    [name]: value,\r\n                  },\r\n                }));\r\n              }}\r\n            />\r\n          </label>\r\n          <label>\r\n            Credit Url:\r\n            <input\r\n              type=\"text\"\r\n              name={`creditUrl`}\r\n              value={footerData.creditUrl}\r\n              placeholder=\"https://sahilsoni.me\"\r\n              onChange={(event) => {\r\n                const { name, value } = event.target;\r\n                this.setState((prevState) => ({\r\n                  ...prevState,\r\n                  footerData: {\r\n                    ...prevState.footerData,\r\n                    [name]: value,\r\n                  },\r\n                }));\r\n              }}\r\n            />\r\n          </label>\r\n          <label>\r\n            Git Url:\r\n            <input\r\n              type=\"text\"\r\n              name={`gitUrl`}\r\n              value={footerData.gitUrl}\r\n              onChange={(event) => {\r\n                const { name, value } = event.target;\r\n                this.setState((prevState) => ({\r\n                  ...prevState,\r\n                  footerData: {\r\n                    ...prevState.footerData,\r\n                    [name]: value,\r\n                  },\r\n                }));\r\n              }}\r\n            />\r\n          </label>\r\n        </div>\r\n        <div className=\"form-save-button\">\r\n          <button\r\n            type=\"submit\"\r\n            onClick={(event) => {\r\n              event.preventDefault();\r\n              this.props.updateHeaderFooterData({\r\n                headerData: this.state.headerData,\r\n                footerData: this.state.footerData,\r\n              });\r\n            }}>\r\n            Save\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HeaderFooterForm;\r\n","import React, { Component } from \"react\";\r\nclass IntroForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: props.userData.introInfo,\r\n    };\r\n  }\r\n  handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    this.setState((prevState) => ({\r\n      data: {\r\n        ...prevState.data,\r\n        [name]: value,\r\n      },\r\n    }));\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.props.updateUserData(this.state.data, \"introInfo\");\r\n  };\r\n\r\n  render() {\r\n    const { name, status, displayPic, summary } = this.state.data;\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <div className=\"form-heading\">Intro</div>\r\n        <div className=\"input-field-section\">\r\n          <label>\r\n            Name:\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={name}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n          <label>\r\n            Status:\r\n            <input\r\n              type=\"text\"\r\n              name=\"status\"\r\n              value={status}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n          <label>\r\n            Display Picture:\r\n            <input\r\n              type=\"text\"\r\n              name=\"displayPic\"\r\n              value={displayPic}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n          <label>\r\n            Summary:\r\n            <textarea\r\n              name=\"summary\"\r\n              value={summary}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n        </div>\r\n        <div className=\"form-save-button\">\r\n          <button type=\"submit\">Save</button>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default IntroForm;\r\n","import React, { Component } from \"react\";\r\n\r\nclass ProjectForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: props.userData.projectWork,\r\n    };\r\n  }\r\n  render() {\r\n    const { data } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"form-heading\">Project</div>\r\n        {data.map((exp, index) => (\r\n          <div className=\"input-field-section\" key={index}>\r\n            <label>\r\n              Project Heading:\r\n              <input\r\n                type=\"text\"\r\n                name={`project_heading`}\r\n                value={exp.project_heading}\r\n                onChange={(event) => {\r\n                  const { name, value } = event.target;\r\n                  this.setState((prevState) => ({\r\n                    data: prevState.data.map((exp, i) =>\r\n                      i === index ? { ...exp, [name]: value } : exp\r\n                    ),\r\n                  }));\r\n                }}\r\n              />\r\n            </label>\r\n            <label>\r\n              Project Description:\r\n              <textarea\r\n                type=\"text\"\r\n                name={`project_desc`}\r\n                value={exp.project_desc}\r\n                onChange={(event) => {\r\n                  const { name, value } = event.target;\r\n                  this.setState((prevState) => ({\r\n                    data: prevState.data.map((exp, i) =>\r\n                      i === index ? { ...exp, [name]: value } : exp\r\n                    ),\r\n                  }));\r\n                }}\r\n              />\r\n            </label>\r\n            <label>\r\n              Image source:\r\n              <input\r\n                type=\"text\"\r\n                name={`imgSrc`}\r\n                value={exp.imgSrc}\r\n                onChange={(event) => {\r\n                  const { name, value } = event.target;\r\n                  this.setState((prevState) => ({\r\n                    data: prevState.data.map((exp, i) =>\r\n                      i === index ? { ...exp, [name]: value } : exp\r\n                    ),\r\n                  }));\r\n                }}\r\n              />\r\n            </label>\r\n            <label>\r\n              Git Url:\r\n              <input\r\n                type=\"text\"\r\n                name={`gitUrl`}\r\n                value={exp.gitUrl}\r\n                onChange={(event) => {\r\n                  const { name, value } = event.target;\r\n                  this.setState((prevState) => ({\r\n                    data: prevState.data.map((exp, i) =>\r\n                      i === index ? { ...exp, [name]: value } : exp\r\n                    ),\r\n                  }));\r\n                }}\r\n              />\r\n            </label>\r\n            <label>\r\n              External Url:\r\n              <input\r\n                type=\"text\"\r\n                name={`extUrl`}\r\n                value={exp.extUrl}\r\n                onChange={(event) => {\r\n                  const { name, value } = event.target;\r\n                  this.setState((prevState) => ({\r\n                    data: prevState.data.map((exp, i) =>\r\n                      i === index ? { ...exp, [name]: value } : exp\r\n                    ),\r\n                  }));\r\n                }}\r\n              />\r\n            </label>\r\n          </div>\r\n        ))}\r\n        {this.state.data.length !== 1 && (\r\n          <div className=\"add-sub-section\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => {\r\n                this.setState((prevState) => ({\r\n                  data: prevState.data.slice(0, -1),\r\n                }));\r\n              }}>\r\n              Remove Last Project\r\n            </button>\r\n          </div>\r\n        )}\r\n        <div className=\"form-save-button\">\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => {\r\n              this.setState((prevState) => ({\r\n                data: [\r\n                  ...prevState.data,\r\n                  {\r\n                    project_heading: \"\",\r\n                    imgSrc: \"./assets/\",\r\n                    project_desc: \"\",\r\n                    gitUrl: \"https://\",\r\n                    extUrl: \"https://\",\r\n                  },\r\n                ],\r\n              }));\r\n            }}>\r\n            Add Another Project\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"form-save-button\">\r\n          <button\r\n            type=\"submit\"\r\n            onClick={(event) => {\r\n              event.preventDefault();\r\n              this.props.updateUserData(this.state.data, \"projectWork\");\r\n            }}>\r\n            Save\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProjectForm;\r\n","import React, { Component } from \"react\";\r\n\r\nclass SocialMediaLinksEmailForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      socialMediaLinks: props.socialMediaLinks,\r\n      emails: props.emails,\r\n    };\r\n  }\r\n  render() {\r\n    const { socialMediaLinks } = this.state;\r\n    const { emails } = this.state;\r\n    return (\r\n      <div>\r\n        <div className=\"form-heading\">Links and Emails</div>\r\n        <div>\r\n          <div className=\"links-data input-field-section\">\r\n            <label>\r\n              GitHub Url\r\n              <input\r\n                type=\"text\"\r\n                name={`githubUrl`}\r\n                value={socialMediaLinks.githubUrl}\r\n                onChange={(event) => {\r\n                  const { name, value } = event.target;\r\n                  this.setState((prevState) => ({\r\n                    ...prevState,\r\n                    socialMediaLinks: {\r\n                      ...prevState.socialMediaLinks,\r\n                      [name]: value,\r\n                    },\r\n                  }));\r\n                }}\r\n              />\r\n            </label>\r\n            <label>\r\n              Leetcode Url:\r\n              <input\r\n                type=\"text\"\r\n                name={`leetcodeUrl`}\r\n                value={socialMediaLinks.leetcodeUrl}\r\n                onChange={(event) => {\r\n                  const { name, value } = event.target;\r\n                  this.setState((prevState) => ({\r\n                    ...prevState,\r\n                    socialMediaLinks: {\r\n                      ...prevState.socialMediaLinks,\r\n                      [name]: value,\r\n                    },\r\n                  }));\r\n                }}\r\n              />\r\n            </label>\r\n            <label>\r\n              Instagram Url:\r\n              <input\r\n                type=\"text\"\r\n                name={`instaUrl`}\r\n                value={socialMediaLinks.instaUrl}\r\n                onChange={(event) => {\r\n                  const { name, value } = event.target;\r\n                  this.setState((prevState) => ({\r\n                    ...prevState,\r\n                    socialMediaLinks: {\r\n                      ...prevState.socialMediaLinks,\r\n                      [name]: value,\r\n                    },\r\n                  }));\r\n                }}\r\n              />\r\n            </label>\r\n            <label>\r\n              Twitter Url:\r\n              <input\r\n                type=\"text\"\r\n                name={`twitterUrl`}\r\n                value={socialMediaLinks.twitterUrl}\r\n                onChange={(event) => {\r\n                  const { name, value } = event.target;\r\n                  this.setState((prevState) => ({\r\n                    ...prevState,\r\n                    socialMediaLinks: {\r\n                      ...prevState.socialMediaLinks,\r\n                      [name]: value,\r\n                    },\r\n                  }));\r\n                }}\r\n              />\r\n            </label>\r\n            <label>\r\n              Linkedin Url:\r\n              <input\r\n                type=\"text\"\r\n                name={`linkedinUrl`}\r\n                value={socialMediaLinks.linkedinUrl}\r\n                onChange={(event) => {\r\n                  const { name, value } = event.target;\r\n                  this.setState((prevState) => ({\r\n                    ...prevState,\r\n                    socialMediaLinks: {\r\n                      ...prevState.socialMediaLinks,\r\n                      [name]: value,\r\n                    },\r\n                  }));\r\n                }}\r\n              />\r\n            </label>\r\n          </div>\r\n          <div className=\"emails input-field-section\">\r\n            <label>\r\n              Email:\r\n              {emails.map((email, idx) => {\r\n                return (\r\n                  <div key={idx}>\r\n                    <input\r\n                      type=\"email\"\r\n                      name={`email`}\r\n                      value={email}\r\n                      onChange={(event) => {\r\n                        const { value } = event.target;\r\n                        this.setState((prevState) => ({\r\n                          ...prevState,\r\n                          emails: emails.map((email, currIdx) => {\r\n                            return idx === currIdx ? value : email;\r\n                          }),\r\n                        }));\r\n                      }}\r\n                    />\r\n                  </div>\r\n                );\r\n              })}\r\n              {emails.length > 1 && (\r\n                <div>\r\n                  <button\r\n                    className=\"remove-email\"\r\n                    style={{ margin: \"3px\" }}\r\n                    onClick={() =>\r\n                      this.setState((prevState) => {\r\n                        return {\r\n                          ...prevState,\r\n                          emails: prevState.emails.slice(0, -1),\r\n                        };\r\n                      })\r\n                    }>\r\n                    Remove Last Email\r\n                  </button>\r\n                </div>\r\n              )}\r\n            </label>\r\n\r\n            <div className=\"add-sub-section\">\r\n              <button\r\n                className=\"add-email\"\r\n                onClick={() => {\r\n                  this.setState((prevState) => {\r\n                    return { ...prevState, emails: [...prevState.emails, \"\"] };\r\n                  });\r\n                }}>\r\n                Add Another Email\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-save-button\">\r\n          <button\r\n            type=\"submit\"\r\n            onClick={(event) => {\r\n              event.preventDefault();\r\n              this.props.updateLinksEmailsData({\r\n                socialMediaLinks: this.state.socialMediaLinks,\r\n                emails: this.state.emails,\r\n              });\r\n            }}>\r\n            Save\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default SocialMediaLinksEmailForm;\r\n","const sampleAppObject = {\r\n  userData: {\r\n    experiences: [\r\n      {\r\n        company: \"\",\r\n        position: \"\",\r\n        duration: \"\",\r\n        description: [\"\"],\r\n      },\r\n    ],\r\n    projectWork: [\r\n      {\r\n        project_heading: \"\",\r\n        imgSrc: \"./assets/\",\r\n        project_desc: \"\",\r\n        gitUrl: \"https://\",\r\n        extUrl: \"https://\",\r\n      },\r\n    ],\r\n    contactInfo: {\r\n      content: \"\",\r\n      email: \"\",\r\n    },\r\n    introInfo: {\r\n      name: \"\",\r\n      status: \"\",\r\n      displayPic: \"./assets/\",\r\n      summary: \"\",\r\n    },\r\n    aboutInfo: {\r\n      firstPara: \"\",\r\n      secondPara: \"\",\r\n      displayPic: \"./assets/\",\r\n      skillsList: [\"\"],\r\n    },\r\n  },\r\n  headerData: {\r\n    resumeSrc: \"./assets/\",\r\n    logoSrc: \"./assets/\",\r\n  },\r\n  footerData: {\r\n    gitUrl: \"https://\",\r\n    creditContent: \"\",\r\n    creditUrl: \"\",\r\n    selfCreditContent: \"\",\r\n    gitRepo: \"\",\r\n  },\r\n  socialMediaLinks: {\r\n    githubUrl: \"https://\",\r\n    leetcodeUrl: \"https://\",\r\n    instaUrl: \"https://\",\r\n    twitterUrl: \"https://\",\r\n    linkedinUrl: \"https://\",\r\n  },\r\n  emails: [\"\"],\r\n};\r\n\r\nexport default sampleAppObject;\r\n","import React, { Component } from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport { Preview, Instructions } from \"./\";\r\nimport {\r\n  AboutForm,\r\n  ContactForm,\r\n  ExperienceForm,\r\n  HeaderFooterForm,\r\n  IntroForm,\r\n  ProjectForm,\r\n  SocialmediaLinksEmailForm,\r\n} from \"./forms\";\r\nimport \"./PortfolioBuilder.css\";\r\nimport AppData from \"./emptyData\";\r\n\r\nconst previewModalStyles = {\r\n  overlay: {\r\n    backgroundColor: \"rgba(0, 0, 0, 0.7)\",\r\n    zIndex: 100,\r\n  },\r\n  content: {\r\n    top: \"50px\",\r\n    overflow: \"auto\",\r\n    padding: 0,\r\n    zIndex: 100,\r\n  },\r\n};\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nclass PortfolioBuilder extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      activeSection: 0,\r\n      openPreview: false,\r\n      appData: AppData,\r\n      isCurrFormSaved: false,\r\n    };\r\n  }\r\n\r\n  forms = [\r\n    <Instructions />,\r\n    <IntroForm />,\r\n    <AboutForm />,\r\n    <ExperienceForm />,\r\n    <ProjectForm />,\r\n    <ContactForm />,\r\n    <HeaderFooterForm />,\r\n    <SocialmediaLinksEmailForm />,\r\n  ];\r\n\r\n  updateUserData = (newData, propName) => {\r\n    this.setState((prevState) => {\r\n      const updatedObj = {\r\n        ...prevState,\r\n        appData: {\r\n          ...prevState.appData,\r\n          userData: {\r\n            ...prevState.appData.userData,\r\n            [propName]: newData,\r\n          },\r\n        },\r\n        isCurrFormSaved: true,\r\n      };\r\n      return updatedObj;\r\n    });\r\n  };\r\n\r\n  updateHeaderFooterData = (newData) => {\r\n    this.setState((prevState) => {\r\n      const updatedObj = {\r\n        ...prevState,\r\n        appData: {\r\n          ...prevState.appData,\r\n          headerData: newData.headerData,\r\n          footerData: newData.footerData,\r\n        },\r\n        isCurrFormSaved: true,\r\n      };\r\n      return updatedObj;\r\n    });\r\n  };\r\n\r\n  updateLinksEmailsData = (newData) => {\r\n    this.setState((prevState) => {\r\n      const updatedObj = {\r\n        ...prevState,\r\n        appData: {\r\n          ...prevState.appData,\r\n          socialMediaLinks: newData.socialMediaLinks,\r\n          emails: newData.emails,\r\n        },\r\n        isCurrFormSaved: true,\r\n      };\r\n      return updatedObj;\r\n    });\r\n  };\r\n\r\n  // HOC this gets a component and return a same component with added props,\r\n  // Need it, as i have array of components and adding props later on\r\n  SelectedFormComponentWithProps = (Component, props) => {\r\n    if (!Component) return null;\r\n    const WrappedComponent = () => <Component {...props} />;\r\n    return <WrappedComponent />;\r\n  };\r\n\r\n  renderSectionContent() {\r\n    const { activeSection } = this.state;\r\n    if (activeSection >= this.forms.length || activeSection < 0) return null;\r\n\r\n    const selectedForm = this.forms[activeSection];\r\n    return this.SelectedFormComponentWithProps(\r\n      selectedForm.type,\r\n      activeSection && activeSection <= 5\r\n        ? {\r\n            updateUserData: this.updateUserData,\r\n            userData: this.state.appData.userData,\r\n          }\r\n        : activeSection === 6\r\n        ? {\r\n            updateHeaderFooterData: this.updateHeaderFooterData,\r\n            headerData: this.state.appData.headerData,\r\n            footerData: this.state.appData.footerData,\r\n          }\r\n        : activeSection === 7\r\n        ? {\r\n            updateLinksEmailsData: this.updateLinksEmailsData,\r\n            socialMediaLinks: this.state.appData.socialMediaLinks,\r\n            emails: this.state.appData.emails,\r\n          }\r\n        : {}\r\n    );\r\n  }\r\n\r\n  handleButtonClick(idx) {\r\n    this.setState({ ...this.state, activeSection: idx });\r\n  }\r\n\r\n  togglePreview() {\r\n    this.setState({ ...this.state, openPreview: !this.state.openPreview });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"portfolioBuilder\">\r\n        <div className=\"switch-btn\">\r\n          <button\r\n            onClick={() => this.handleButtonClick(this.state.activeSection - 1)}\r\n            disabled={this.state.activeSection === 0}>\r\n            Previous\r\n          </button>\r\n          <button\r\n            onClick={() => this.togglePreview()}\r\n            disabled={\r\n              this.state.activeSection === 0 || !this.state.isCurrFormSaved\r\n            }>\r\n            Preview\r\n          </button>\r\n          {this.state.activeSection + 1 === this.forms.length && (\r\n            <button\r\n              className=\"generate-json\"\r\n              disabled={!this.state.isCurrFormSaved}\r\n              onClick={() => {\r\n                const json = JSON.stringify(this.state.appData);\r\n                const blob = new Blob([json], { type: \"application/json\" });\r\n                const url = URL.createObjectURL(blob);\r\n                const a = document.createElement(\"a\");\r\n                a.download = \"data.json\";\r\n                a.href = url;\r\n                document.body.appendChild(a);\r\n                a.click();\r\n                document.body.removeChild(a);\r\n                URL.revokeObjectURL(url);\r\n              }}>\r\n              Generate JSON\r\n            </button>\r\n          )}\r\n          <button\r\n            onClick={() => {\r\n              this.state.isCurrFormSaved = false;\r\n              this.handleButtonClick(this.state.activeSection + 1);\r\n            }}\r\n            disabled={\r\n              this.state.activeSection !== 0 &&\r\n              (this.state.activeSection + 1 >= this.forms.length ||\r\n                !this.state.isCurrFormSaved)\r\n            }>\r\n            Next\r\n          </button>\r\n        </div>\r\n        <div\r\n          style={\r\n            this.state.activeSection === 0 || this.state.isCurrFormSaved\r\n              ? { display: \"none\" }\r\n              : {\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  margin: \"20px 0\",\r\n                  backgroundColor: \"antiquewhite\",\r\n                  color: \"#ff0e0e\",\r\n                  padding: \"5px 2px\",\r\n                }\r\n          }>\r\n          <p style={{ margin: 0 }}>\r\n            Please save the current form before previewing or proceeding to the\r\n            next form.\r\n          </p>\r\n        </div>\r\n        <div className=\"form-section\">{this.renderSectionContent()}</div>\r\n\r\n        <Modal\r\n          isOpen={this.state.openPreview}\r\n          onRequestClose={() => this.togglePreview()}\r\n          style={previewModalStyles}>\r\n          <div style={{ pointerEvents: \"none\" }}>\r\n            <Preview {...this.state.appData} />\r\n          </div>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PortfolioBuilder;\r\n","import React from \"react\";\r\nimport { PortfolioBuilder } from \".\";\r\n\r\nexport default function PortfolioBuilderWrapper() {\r\n  return <PortfolioBuilder></PortfolioBuilder>;\r\n}\r\n"],"names":["_Component","_inherits","Preview","_super","_createSuper","props","_this","_classCallCheck","call","state","width","window","innerWidth","handleResize","bind","_assertThisInitialized","_createClass","key","value","addEventListener","this","removeEventListener","setState","_this$props","socialMediaLinks","userData","footerData","_jsxs","className","children","_jsx","AllSections","_objectSpread","LeftPanel","Footer","Component","Instructions","apply","arguments","_Fragment","NewTabAnchor","href","style","fontSize","fontWeight","AboutForm","handleChange","event","_event$target","target","name","prevState","data","_defineProperty","handleSkillsListChange","index","skillsList","_toConsumableArray","handleAddSkill","concat","handleRemoveSkill","splice","handleSubmit","preventDefault","updateUserData","aboutInfo","_this2","_this$state$data","firstPara","secondPara","displayPic","onSubmit","onChange","type","map","skill","margin","onClick","ContactForm","contactInfo","content","email","ExperienceForm","experiences","exp","company","i","position","_event$target2","duration","_event$target3","description","descIndex","d","j","slice","length","HeaderFooterForm","headerData","resumeSrc","logoSrc","selfCreditContent","placeholder","gitRepo","_event$target4","creditContent","_event$target5","creditUrl","_event$target6","gitUrl","_event$target7","updateHeaderFooterData","IntroForm","introInfo","status","summary","ProjectForm","projectWork","project_heading","project_desc","imgSrc","extUrl","SocialMediaLinksEmailForm","emails","githubUrl","leetcodeUrl","instaUrl","twitterUrl","linkedinUrl","idx","currIdx","updateLinksEmailsData","previewModalStyles","overlay","backgroundColor","zIndex","top","overflow","padding","Modal","PortfolioBuilder","forms","SocialmediaLinksEmailForm","newData","propName","appData","isCurrFormSaved","SelectedFormComponentWithProps","WrappedComponent","activeSection","openPreview","AppData","selectedForm","handleButtonClick","disabled","togglePreview","json","JSON","stringify","blob","Blob","url","URL","createObjectURL","a","document","createElement","download","body","appendChild","click","removeChild","revokeObjectURL","display","justifyContent","color","renderSectionContent","isOpen","onRequestClose","pointerEvents","PortfolioBuilderWrapper"],"sourceRoot":""}